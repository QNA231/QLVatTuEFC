// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyVatTuEFC.Entities;

#nullable disable

namespace QuanLyVatTuEFC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240115064812_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyVatTuEFC.Entities.ChiTietPhieuNhap", b =>
                {
                    b.Property<int>("ChiTietPhieuNhapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietPhieuNhapId"));

                    b.Property<int>("PhieuNhapId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongNhap")
                        .HasColumnType("int");

                    b.Property<int>("VatTuId")
                        .HasColumnType("int");

                    b.HasKey("ChiTietPhieuNhapId");

                    b.HasIndex("PhieuNhapId");

                    b.HasIndex("VatTuId");

                    b.ToTable("ChiTietPhieuNhap");
                });

            modelBuilder.Entity("QuanLyVatTuEFC.Entities.ChiTietPhieuXuat", b =>
                {
                    b.Property<int>("ChiTietPhieuXuatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChiTietPhieuXuatId"));

                    b.Property<int>("PhieuXuatId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongXuat")
                        .HasColumnType("int");

                    b.Property<int>("VatTuId")
                        .HasColumnType("int");

                    b.HasKey("ChiTietPhieuXuatId");

                    b.HasIndex("PhieuXuatId");

                    b.HasIndex("VatTuId");

                    b.ToTable("ChiTietPhieuXuat");
                });

            modelBuilder.Entity("QuanLyVatTuEFC.Entities.PhieuNhap", b =>
                {
                    b.Property<int>("PhieuNhapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhieuNhapId"));

                    b.Property<string>("MaPhieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhieuNhapId");

                    b.ToTable("PhieuNhap");
                });

            modelBuilder.Entity("QuanLyVatTuEFC.Entities.PhieuXuat", b =>
                {
                    b.Property<int>("PhieuXuatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhieuXuatId"));

                    b.Property<string>("MaPhieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhieuXuatId");

                    b.ToTable("PhieuXuat");
                });

            modelBuilder.Entity("QuanLyVatTuEFC.Entities.VatTu", b =>
                {
                    b.Property<int>("VatTuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VatTuId"));

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenVatTu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VatTuId");

                    b.ToTable("VatTu");
                });

            modelBuilder.Entity("QuanLyVatTuEFC.Entities.ChiTietPhieuNhap", b =>
                {
                    b.HasOne("QuanLyVatTuEFC.Entities.PhieuNhap", "PhieuNhap")
                        .WithMany()
                        .HasForeignKey("PhieuNhapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyVatTuEFC.Entities.VatTu", "VatTu")
                        .WithMany()
                        .HasForeignKey("VatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuNhap");

                    b.Navigation("VatTu");
                });

            modelBuilder.Entity("QuanLyVatTuEFC.Entities.ChiTietPhieuXuat", b =>
                {
                    b.HasOne("QuanLyVatTuEFC.Entities.PhieuXuat", "PhieuNhapXuat")
                        .WithMany()
                        .HasForeignKey("PhieuXuatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyVatTuEFC.Entities.VatTu", "VatTu")
                        .WithMany()
                        .HasForeignKey("VatTuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuNhapXuat");

                    b.Navigation("VatTu");
                });
#pragma warning restore 612, 618
        }
    }
}
